{"version":3,"file":"static/js/681.9915f2f4.chunk.js","mappings":"kOAwDA,UA5CqB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAjBAC,EAAAA,EAAAA,YAAU,WACPH,GAAa,GACb,IAAMI,EAAU,mCAAG,8GAGKC,EAAAA,EAAAA,GAAM,uCAAD,OACmBX,EADnB,4EAHV,OAGPY,EAHO,OAMbR,EAASQ,EAAIC,KAAKC,SANL,yEASNN,EAAS,KAAMO,UATT,yDAAH,qDAYhBL,IAAaM,SAAQ,kBAAMV,GAAa,EAAnB,GACvB,GAAE,CAACN,KAGD,2BACIO,IAAS,sCAAcA,KACvBF,IAAa,SAAC,IAAD,KACd,wBACIF,EAAMc,OAAS,EACXd,EAAMe,KAAI,SAAAf,GACP,OACG,yBACG,4BACG,wBAAKA,EAAMgB,UACX,uBAAIhB,EAAMiB,cAHPjB,EAAMkB,GAOpB,KACAhB,IAAa,+GAI9B,C","sources":["components/Reviews.jsx"],"sourcesContent":["// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=ba542000abc8f23c21b9168c238e4f34&language=en-US&page=1\n\nimport axios from 'axios';\n// import { nanoid } from 'nanoid';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader/Loader';\n// import { lazy, Suspense } from 'react';\n\n// const MyComponent = lazy(() => import('path/to/MyComponent'));\n// const API_KEY = 'ba542000abc8f23c21b9168c238e4f34';\n\nconst MovieReviews = () => {\n   const { movieId } = useParams();\n\n   const [movie, setMovie] = useState([]);\n   const [isLoading, setIsloading] = useState(false);\n   const [error, setError] = useState(null);\n   useEffect(() => {\n      setIsloading(true);\n      const fetchMovie = async () => {\n         try {\n            // setIsloading(true);\n            const res = await axios(\n               ` https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=ba542000abc8f23c21b9168c238e4f34&language=en-US&page=1`\n            );\n            setMovie(res.data.results);\n            // return res.data;\n         } catch (error) {\n            return setError(error.message);\n         }\n      };\n      fetchMovie().finally(() => setIsloading(false));\n   }, [movieId]);\n\n   return (\n      <div>\n         {error && <p>Pomulka : {error}</p>}\n         {isLoading && <Loader />}\n         <ul>\n            {movie.length > 0\n               ? movie.map(movie => {\n                    return (\n                       <li key={movie.id}>\n                          <div>\n                             <h3>{movie.author}</h3>\n                             <p>{movie.content}</p>\n                          </div>\n                       </li>\n                    );\n                 })\n               : !isLoading && <p>Немає відгуків</p>}\n         </ul>\n      </div>\n   );\n};\nexport default MovieReviews;\n"],"names":["movieId","useParams","useState","movie","setMovie","isLoading","setIsloading","error","setError","useEffect","fetchMovie","axios","res","data","results","message","finally","length","map","author","content","id"],"sourceRoot":""}